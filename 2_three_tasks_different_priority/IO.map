Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    main.o(i.main) refers to queue.o(i.xQueueCreateMutex) for xQueueCreateMutex
    main.o(i.main) refers to main.o(i.PortF_Init) for PortF_Init
    main.o(i.main) refers to tasks.o(i.xTaskGenericCreate) for xTaskGenericCreate
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to main.o(.data) for MyMutex
    main.o(i.main) refers to main.o(i.vTask1) for vTask1
    main.o(i.main) refers to main.o(i.vTask2) for vTask2
    main.o(i.vTask1) refers to queue.o(i.xQueueGenericReceive) for xQueueGenericReceive
    main.o(i.vTask1) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.vTask1) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.vTask1) refers to main.o(.data) for MyMutex
    main.o(i.vTask2) refers to queue.o(i.xQueueGenericReceive) for xQueueGenericReceive
    main.o(i.vTask2) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.vTask2) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.vTask2) refers to main.o(.data) for MyMutex
    queue.o(i.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(i.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueAddToRegistry) refers to queue.o(.bss) for xQueueRegistry
    queue.o(i.vQueueDelete) refers to queue.o(i.vQueueUnregisterQueue) for vQueueUnregisterQueue
    queue.o(i.vQueueDelete) refers to heap_2.o(i.vPortFree) for vPortFree
    queue.o(i.vQueueUnregisterQueue) refers to queue.o(.bss) for xQueueRegistry
    queue.o(i.xQueueCreateMutex) refers to heap_2.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueCreateMutex) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.xQueueGenericCreate) refers to heap_2.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.xQueueGenericReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskPriorityInherit) for vTaskPriorityInherit
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueGiveMutexRecursive) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueTakeMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueTakeMutexRecursive) refers to queue.o(i.xQueueGenericReceive) for xQueueGenericReceive
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAllocateTCBAndStack) refers to heap_2.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.prvAllocateTCBAndStack) refers to heap_2.o(i.vPortFree) for vPortFree
    tasks.o(i.prvAllocateTCBAndStack) refers to aeabi_memset.o(.text) for __aeabi_memset
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_2.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvInitialiseTCBVariables) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvListTaskWithinSingleList) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pvTaskIncrementMutexHeldCount) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskNotifyTake) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.ulTaskNotifyTake) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskGetStackHighWaterMark) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.uxTaskGetStackHighWaterMark) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.prvListTaskWithinSingleList) for prvListTaskWithinSingleList
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to tasks.o(.data) for xTickCount
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelayUntil) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(.data) for xTickCount
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.vTaskPriorityInherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPriorityInherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPriorityInherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPriorityInherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskGenericCreate) for xTaskGenericCreate
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to main.o(i.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGenericCreate) refers to tasks.o(i.prvAllocateTCBAndStack) for prvAllocateTCBAndStack
    tasks.o(i.xTaskGenericCreate) refers to tasks.o(i.prvInitialiseTCBVariables) for prvInitialiseTCBVariables
    tasks.o(i.xTaskGenericCreate) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.xTaskGenericCreate) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericCreate) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.xTaskGenericCreate) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericCreate) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericCreate) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.xTaskGenericCreate) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyWait) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskNotifyWait) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(i.pxPortInitialiseStack) refers to port.o(i.prvTaskExitError) for prvTaskExitError
    port.o(i.vPortEnterCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.xPortStartScheduler) refers to port.o(i.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for __asm___6_port_c_39a90d8d__prvEnableVFP
    port.o(i.xPortStartScheduler) refers to port.o(.data) for uxCriticalNesting
    port.o(i.xPortSysTickHandler) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    heap_2.o(i.prvHeapInit) refers to heap_2.o(.bss) for ucHeap
    heap_2.o(i.prvHeapInit) refers to heap_2.o(.data) for xStart
    heap_2.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(i.pvPortMalloc) refers to heap_2.o(i.prvHeapInit) for prvHeapInit
    heap_2.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(i.pvPortMalloc) refers to heap_2.o(.data) for xHeapHasBeenInitialised
    heap_2.o(i.vPortFree) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(i.vPortFree) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(i.vPortFree) refers to heap_2.o(.data) for xStart
    heap_2.o(i.xPortGetFreeHeapSize) refers to heap_2.o(.data) for xFreeBytesRemaining
    startup_rvmdk.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_rvmdk.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_rvmdk.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_rvmdk.o(RESET) refers to startup_rvmdk.o(STACK) for StackMem
    startup_rvmdk.o(RESET) refers to port.o(.emb_text) for vPortSVCHandler
    startup_rvmdk.o(RESET) refers to port.o(i.xPortSysTickHandler) for xPortSysTickHandler
    startup_rvmdk.o(RESET) refers to __main.o(!!!main) for __main
    startup_rvmdk.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_rvmdk.o(.text) refers to startup_rvmdk.o(HEAP) for HeapMem
    startup_rvmdk.o(.text) refers to startup_rvmdk.o(STACK) for StackMem
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_rvmdk.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing queue.o(i.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(i.uxQueueGetQueueNumber), (6 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (18 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (6 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (24 bytes).
    Removing queue.o(i.vQueueAddToRegistry), (44 bytes).
    Removing queue.o(i.vQueueDelete), (20 bytes).
    Removing queue.o(i.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(i.vQueueUnregisterQueue), (44 bytes).
    Removing queue.o(i.xQueueGenericCreate), (74 bytes).
    Removing queue.o(i.xQueueGenericReset), (124 bytes).
    Removing queue.o(i.xQueueGenericSendFromISR), (126 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (110 bytes).
    Removing queue.o(i.xQueueGiveMutexRecursive), (48 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (14 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (18 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (74 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (116 bytes).
    Removing queue.o(i.xQueueTakeMutexRecursive), (60 bytes).
    Removing queue.o(.bss), (80 bytes).
    Removing tasks.o(i.prvListTaskWithinSingleList), (176 bytes).
    Removing tasks.o(i.prvTaskCheckFreeStackSpace), (22 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (64 bytes).
    Removing tasks.o(i.ulTaskNotifyTake), (196 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(i.uxTaskGetStackHighWaterMark), (40 bytes).
    Removing tasks.o(i.uxTaskGetSystemState), (156 bytes).
    Removing tasks.o(i.uxTaskGetTaskNumber), (14 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (36 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (56 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (28 bytes).
    Removing tasks.o(i.vTaskDelayUntil), (156 bytes).
    Removing tasks.o(i.vTaskDelete), (184 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(i.vTaskNotifyGiveFromISR), (168 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (116 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (244 bytes).
    Removing tasks.o(i.vTaskResume), (124 bytes).
    Removing tasks.o(i.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(i.vTaskSuspend), (192 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (196 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (240 bytes).
    Removing tasks.o(i.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(i.xTaskGetTickCount), (12 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(i.xTaskNotifyStateClear), (56 bytes).
    Removing tasks.o(i.xTaskNotifyWait), (228 bytes).
    Removing tasks.o(i.xTaskRemoveFromUnorderedEventList), (112 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (152 bytes).
    Removing port.o(i.vPortEndScheduler), (2 bytes).
    Removing heap_2.o(i.vPortInitialiseBlocks), (2 bytes).
    Removing heap_2.o(i.xPortGetFreeHeapSize), (12 bytes).

52 unused section(s) (total 4082 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      648  startup_rvmdk.o(RESET)
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\Source\croutine.c                     0x00000000   Number         0  croutine.o ABSOLUTE
    ..\Source\list.c                         0x00000000   Number         0  list.o ABSOLUTE
    ..\Source\portable\MemMang\heap_2.c      0x00000000   Number         0  heap_2.o ABSOLUTE
    ..\Source\portable\RVDS\ARM_CM4F\port.c  0x00000000   Number         0  port.o ABSOLUTE
    ..\Source\queue.c                        0x00000000   Number         0  queue.o ABSOLUTE
    ..\Source\tasks.c                        0x00000000   Number         0  tasks.o ABSOLUTE
    ..\Source\timers.c                       0x00000000   Number         0  timers.o ABSOLUTE
    ..\\Source\\portable\\RVDS\\ARM_CM4F\\port.c 0x00000000   Number         0  port.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    startup_rvmdk.S                          0x00000000   Number         0  startup_rvmdk.o ABSOLUTE
    $v0                                      0x0000026c   Number         0  startup_rvmdk.o(RESET)
    NmiSR                                    0x00000281   Thumb Code     0  startup_rvmdk.o(RESET)
    FaultISR                                 0x00000283   Thumb Code     0  startup_rvmdk.o(RESET)
    IntDefaultHandler                        0x00000285   Thumb Code     0  startup_rvmdk.o(RESET)
    !!!main                                  0x00000288   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000290   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002c4   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x000002e0   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000002fc   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x000002fe   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000302   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000302   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x00000304   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000306   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000306   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000306   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000306   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000306   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000306   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000306   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000308   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000308   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000308   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0000030e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0000030e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000312   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000312   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000031a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0000031c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0000031c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000320   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x00000328   Section      182  port.o(.emb_text)
    $v0                                      0x00000328   Number         0  port.o(.emb_text)
    .text                                    0x000003e0   Section       24  startup_rvmdk.o(.text)
    $v0                                      0x000003e0   Number         0  startup_rvmdk.o(.text)
    .text                                    0x000003f8   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x00000482   Section       16  aeabi_memset.o(.text)
    .text                                    0x00000492   Section        0  heapauxi.o(.text)
    .text                                    0x00000498   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000004fc   Section       68  rt_memclr.o(.text)
    .text                                    0x00000540   Section       78  rt_memclr_w.o(.text)
    .text                                    0x0000058e   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x000005d8   Section        0  exit.o(.text)
    .text                                    0x000005ec   Section        8  libspace.o(.text)
    .text                                    0x000005f4   Section        0  sys_exit.o(.text)
    .text                                    0x00000600   Section        2  use_no_semi.o(.text)
    .text                                    0x00000602   Section        0  indicate_semi.o(.text)
    i.PortF_Init                             0x00000604   Section        0  main.o(i.PortF_Init)
    i.main                                   0x00000664   Section        0  main.o(i.main)
    i.prvAddCurrentTaskToDelayedList         0x000006cc   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x000006cd   Thumb Code    62  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAllocateTCBAndStack                 0x00000720   Section        0  tasks.o(i.prvAllocateTCBAndStack)
    prvAllocateTCBAndStack                   0x00000721   Thumb Code    66  tasks.o(i.prvAllocateTCBAndStack)
    i.prvCheckTasksWaitingTermination        0x00000764   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x00000765   Thumb Code    86  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataFromQueue                   0x000007c8   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x000007c9   Thumb Code    42  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x000007f2   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x000007f3   Thumb Code   128  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x00000872   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x00000873   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvHeapInit                            0x00000884   Section        0  heap_2.o(i.prvHeapInit)
    prvHeapInit                              0x00000885   Thumb Code    42  heap_2.o(i.prvHeapInit)
    i.prvIdleTask                            0x000008bc   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x000008bd   Thumb Code     8  tasks.o(i.prvIdleTask)
    i.prvInitialiseTCBVariables              0x000008c4   Section        0  tasks.o(i.prvInitialiseTCBVariables)
    prvInitialiseTCBVariables                0x000008c5   Thumb Code    98  tasks.o(i.prvInitialiseTCBVariables)
    i.prvInitialiseTaskLists                 0x00000928   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x00000929   Thumb Code    70  tasks.o(i.prvInitialiseTaskLists)
    i.prvIsQueueEmpty                        0x00000990   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x00000991   Thumb Code    26  queue.o(i.prvIsQueueEmpty)
    i.prvIsQueueFull                         0x000009aa   Section        0  queue.o(i.prvIsQueueFull)
    prvIsQueueFull                           0x000009ab   Thumb Code    30  queue.o(i.prvIsQueueFull)
    i.prvResetNextTaskUnblockTime            0x000009c8   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x000009c9   Thumb Code    42  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvTaskExitError                       0x000009fc   Section        0  port.o(i.prvTaskExitError)
    prvTaskExitError                         0x000009fd   Thumb Code    22  port.o(i.prvTaskExitError)
    i.prvUnlockQueue                         0x00000a12   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x00000a13   Thumb Code   126  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x00000a90   Section        0  heap_2.o(i.pvPortMalloc)
    i.pvTaskIncrementMutexHeldCount          0x00000b48   Section        0  tasks.o(i.pvTaskIncrementMutexHeldCount)
    i.pxPortInitialiseStack                  0x00000b68   Section        0  port.o(i.pxPortInitialiseStack)
    i.uxListRemove                           0x00000b90   Section        0  list.o(i.uxListRemove)
    i.vApplicationStackOverflowHook          0x00000bb8   Section        0  main.o(i.vApplicationStackOverflowHook)
    i.vListInitialise                        0x00000bbc   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x00000bd6   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x00000bdc   Section        0  list.o(i.vListInsert)
    i.vListInsertEnd                         0x00000c10   Section        0  list.o(i.vListInsertEnd)
    i.vPortEnterCritical                     0x00000c28   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x00000c4c   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x00000c6c   Section        0  heap_2.o(i.vPortFree)
    i.vPortSetupTimerInterrupt               0x00000cac   Section        0  port.o(i.vPortSetupTimerInterrupt)
    i.vTask1                                 0x00000cbc   Section        0  main.o(i.vTask1)
    vTask1                                   0x00000cbd   Thumb Code    62  main.o(i.vTask1)
    i.vTask2                                 0x00000d08   Section        0  main.o(i.vTask2)
    vTask2                                   0x00000d09   Thumb Code    62  main.o(i.vTask2)
    i.vTaskDelay                             0x00000d54   Section        0  tasks.o(i.vTaskDelay)
    i.vTaskMissedYield                       0x00000db8   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x00000dc4   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskPriorityInherit                   0x00000e28   Section        0  tasks.o(i.vTaskPriorityInherit)
    i.vTaskSetTimeOutState                   0x00000ed8   Section        0  tasks.o(i.vTaskSetTimeOutState)
    i.vTaskStartScheduler                    0x00000ef0   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x00000f54   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x00000f64   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x00000ffc   Section        0  port.o(i.xPortStartScheduler)
    i.xPortSysTickHandler                    0x00001044   Section        0  port.o(i.xPortSysTickHandler)
    i.xQueueCreateMutex                      0x00001078   Section        0  queue.o(i.xQueueCreateMutex)
    i.xQueueGenericReceive                   0x000010c4   Section        0  queue.o(i.xQueueGenericReceive)
    i.xQueueGenericSend                      0x00001208   Section        0  queue.o(i.xQueueGenericSend)
    i.xTaskCheckForTimeOut                   0x00001318   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskGenericCreate                     0x00001374   Section        0  tasks.o(i.xTaskGenericCreate)
    i.xTaskIncrementTick                     0x00001484   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskPriorityDisinherit                0x000015a4   Section        0  tasks.o(i.xTaskPriorityDisinherit)
    i.xTaskRemoveFromEventList               0x00001628   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x000016a8   Section        0  tasks.o(i.xTaskResumeAll)
    x$fpl$fpinit                             0x00001790   Section       10  fpinit.o(x$fpl$fpinit)
    $v0                                      0x00001790   Number         0  fpinit.o(x$fpl$fpinit)
    .data                                    0x20000000   Section       16  main.o(.data)
    .data                                    0x20000010   Section       56  tasks.o(.data)
    pxDelayedTaskList                        0x20000014   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x20000018   Data           4  tasks.o(.data)
    uxTasksDeleted                           0x2000001c   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x20000020   Data           4  tasks.o(.data)
    xTickCount                               0x20000024   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x20000028   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x2000002c   Data           4  tasks.o(.data)
    uxPendedTicks                            0x20000030   Data           4  tasks.o(.data)
    xYieldPending                            0x20000034   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x20000038   Data           4  tasks.o(.data)
    uxTaskNumber                             0x2000003c   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x20000040   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x20000044   Data           4  tasks.o(.data)
    .data                                    0x20000048   Section        4  port.o(.data)
    uxCriticalNesting                        0x20000048   Data           4  port.o(.data)
    .data                                    0x2000004c   Section       24  heap_2.o(.data)
    xStart                                   0x2000004c   Data           8  heap_2.o(.data)
    xEnd                                     0x20000054   Data           8  heap_2.o(.data)
    xFreeBytesRemaining                      0x2000005c   Data           4  heap_2.o(.data)
    xHeapHasBeenInitialised                  0x20000060   Data           4  heap_2.o(.data)
    .bss                                     0x20000064   Section      420  tasks.o(.bss)
    pxReadyTasksLists                        0x20000064   Data         320  tasks.o(.bss)
    xDelayedTaskList1                        0x200001a4   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x200001b8   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x200001cc   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x200001e0   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x200001f4   Data          20  tasks.o(.bss)
    .bss                                     0x20000208   Section    30000  heap_2.o(.bss)
    ucHeap                                   0x20000208   Data       30000  heap_2.o(.bss)
    .bss                                     0x20007738   Section       96  libspace.o(.bss)
    HEAP                                     0x20007798   Section        0  startup_rvmdk.o(HEAP)
    STACK                                    0x20007798   Section      512  startup_rvmdk.o(STACK)
    HeapMem                                  0x20007798   Data           0  startup_rvmdk.o(HEAP)
    StackMem                                 0x20007798   Data           0  startup_rvmdk.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           0  startup_rvmdk.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    Reset_Handler                            0x0000026d   Thumb Code     0  startup_rvmdk.o(RESET)
    __main                                   0x00000289   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000291   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000291   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000291   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x0000029f   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002c5   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x000002e1   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x000002fd   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x000002ff   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x00000305   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000307   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000309   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000309   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000309   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0000030f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0000030f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000031b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0000031d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0000031d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000321   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    vPortSVCHandler                          0x00000329   Thumb Code    28  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvStartFirstTask 0x00000349   Thumb Code    28  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvEnableVFP  0x00000369   Thumb Code    16  port.o(.emb_text)
    xPortPendSVHandler                       0x0000037d   Thumb Code    88  port.o(.emb_text)
    vPortGetIPSR                             0x000003d9   Thumb Code     6  port.o(.emb_text)
    __user_initial_stackheap                 0x000003e1   Thumb Code     0  startup_rvmdk.o(.text)
    __aeabi_memcpy                           0x000003f9   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x000003f9   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x0000045f   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset                           0x00000483   Thumb Code    16  aeabi_memset.o(.text)
    __use_two_region_memory                  0x00000493   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000495   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000497   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x00000499   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000499   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000499   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x000004e1   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr                           0x000004fd   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x000004fd   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x00000501   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x00000541   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x00000541   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x00000541   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x00000545   Thumb Code     0  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x0000058f   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x000005d9   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x000005ed   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x000005ed   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x000005ed   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x000005f5   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000601   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000601   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x00000603   Thumb Code     0  indicate_semi.o(.text)
    PortF_Init                               0x00000605   Thumb Code    76  main.o(i.PortF_Init)
    main                                     0x00000665   Thumb Code    74  main.o(i.main)
    pvPortMalloc                             0x00000a91   Thumb Code   166  heap_2.o(i.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00000b49   Thumb Code    26  tasks.o(i.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00000b69   Thumb Code    34  port.o(i.pxPortInitialiseStack)
    uxListRemove                             0x00000b91   Thumb Code    40  list.o(i.uxListRemove)
    vApplicationStackOverflowHook            0x00000bb9   Thumb Code     4  main.o(i.vApplicationStackOverflowHook)
    vListInitialise                          0x00000bbd   Thumb Code    26  list.o(i.vListInitialise)
    vListInitialiseItem                      0x00000bd7   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x00000bdd   Thumb Code    52  list.o(i.vListInsert)
    vListInsertEnd                           0x00000c11   Thumb Code    24  list.o(i.vListInsertEnd)
    vPortEnterCritical                       0x00000c29   Thumb Code    30  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x00000c4d   Thumb Code    28  port.o(i.vPortExitCritical)
    vPortFree                                0x00000c6d   Thumb Code    56  heap_2.o(i.vPortFree)
    vPortSetupTimerInterrupt                 0x00000cad   Thumb Code    16  port.o(i.vPortSetupTimerInterrupt)
    vTaskDelay                               0x00000d55   Thumb Code    84  tasks.o(i.vTaskDelay)
    vTaskMissedYield                         0x00000db9   Thumb Code     8  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00000dc5   Thumb Code    84  tasks.o(i.vTaskPlaceOnEventList)
    vTaskPriorityInherit                     0x00000e29   Thumb Code   164  tasks.o(i.vTaskPriorityInherit)
    vTaskSetTimeOutState                     0x00000ed9   Thumb Code    14  tasks.o(i.vTaskSetTimeOutState)
    vTaskStartScheduler                      0x00000ef1   Thumb Code    74  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x00000f55   Thumb Code    12  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x00000f65   Thumb Code   132  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x00000ffd   Thumb Code    58  port.o(i.xPortStartScheduler)
    xPortSysTickHandler                      0x00001045   Thumb Code    48  port.o(i.xPortSysTickHandler)
    xQueueCreateMutex                        0x00001079   Thumb Code    76  queue.o(i.xQueueCreateMutex)
    xQueueGenericReceive                     0x000010c5   Thumb Code   318  queue.o(i.xQueueGenericReceive)
    xQueueGenericSend                        0x00001209   Thumb Code   268  queue.o(i.xQueueGenericSend)
    xTaskCheckForTimeOut                     0x00001319   Thumb Code    84  tasks.o(i.xTaskCheckForTimeOut)
    xTaskGenericCreate                       0x00001375   Thumb Code   242  tasks.o(i.xTaskGenericCreate)
    xTaskIncrementTick                       0x00001485   Thumb Code   242  tasks.o(i.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x000015a5   Thumb Code   122  tasks.o(i.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00001629   Thumb Code   104  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x000016a9   Thumb Code   196  tasks.o(i.xTaskResumeAll)
    _fp_init                                 0x00001791   Thumb Code    10  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00001799   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00001799   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x0000179c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000017bc   Number         0  anon$$obj.o(Region$$Table)
    SW1                                      0x20000000   Data           4  main.o(.data)
    SW2                                      0x20000004   Data           4  main.o(.data)
    Out                                      0x20000008   Data           4  main.o(.data)
    MyMutex                                  0x2000000c   Data           4  main.o(.data)
    pxCurrentTCB                             0x20000010   Data           4  tasks.o(.data)
    __libspace_start                         0x20007738   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20007798   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000026d

  Load Region LR_1 (Base: 0x00000000, Size: 0x00001820, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000017bc, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000288   Code   RO          746  * RESET               startup_rvmdk.o
    0x00000288   0x00000288   0x00000008   Code   RO          760  * !!!main             c_w.l(__main.o)
    0x00000290   0x00000290   0x00000034   Code   RO          923    !!!scatter          c_w.l(__scatter.o)
    0x000002c4   0x000002c4   0x0000001a   Code   RO          925    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002de   0x000002de   0x00000002   PAD
    0x000002e0   0x000002e0   0x0000001c   Code   RO          927    !!handler_zi        c_w.l(__scatter_zi.o)
    0x000002fc   0x000002fc   0x00000002   Code   RO          793    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x000002fe   0x000002fe   0x00000004   Code   RO          799    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          802    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          805    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          807    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          809    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          812    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          814    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          816    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          818    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          820    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          822    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          824    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          826    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          828    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          830    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          832    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          836    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          838    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          840    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000000   Code   RO          842    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000302   0x00000302   0x00000002   Code   RO          843    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x00000304   0x00000304   0x00000002   Code   RO          863    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x00000306   0x00000306   0x00000000   Code   RO          876    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x00000306   0x00000306   0x00000000   Code   RO          878    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x00000306   0x00000306   0x00000000   Code   RO          881    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x00000306   0x00000306   0x00000000   Code   RO          884    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x00000306   0x00000306   0x00000000   Code   RO          886    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x00000306   0x00000306   0x00000000   Code   RO          889    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x00000306   0x00000306   0x00000002   Code   RO          890    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x00000308   0x00000308   0x00000000   Code   RO          762    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x00000308   0x00000308   0x00000000   Code   RO          768    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x00000308   0x00000308   0x00000006   Code   RO          780    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0000030e   0x0000030e   0x00000000   Code   RO          770    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x0000030e   0x0000030e   0x00000004   Code   RO          771    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          773    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000312   0x00000312   0x00000008   Code   RO          774    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000031a   0x0000031a   0x00000002   Code   RO          797    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0000031c   0x0000031c   0x00000000   Code   RO          845    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0000031c   0x0000031c   0x00000004   Code   RO          846    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000320   0x00000320   0x00000006   Code   RO          847    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x00000326   0x00000326   0x00000002   PAD
    0x00000328   0x00000328   0x000000b6   Code   RO          646    .emb_text           port.o
    0x000003de   0x000003de   0x00000002   PAD
    0x000003e0   0x000003e0   0x00000018   Code   RO          747    .text               startup_rvmdk.o
    0x000003f8   0x000003f8   0x0000008a   Code   RO          754    .text               c_w.l(rt_memcpy_v6.o)
    0x00000482   0x00000482   0x00000010   Code   RO          756    .text               c_w.l(aeabi_memset.o)
    0x00000492   0x00000492   0x00000006   Code   RO          758    .text               c_w.l(heapauxi.o)
    0x00000498   0x00000498   0x00000064   Code   RO          763    .text               c_w.l(rt_memcpy_w.o)
    0x000004fc   0x000004fc   0x00000044   Code   RO          765    .text               c_w.l(rt_memclr.o)
    0x00000540   0x00000540   0x0000004e   Code   RO          782    .text               c_w.l(rt_memclr_w.o)
    0x0000058e   0x0000058e   0x0000004a   Code   RO          784    .text               c_w.l(sys_stackheap_outer.o)
    0x000005d8   0x000005d8   0x00000012   Code   RO          786    .text               c_w.l(exit.o)
    0x000005ea   0x000005ea   0x00000002   PAD
    0x000005ec   0x000005ec   0x00000008   Code   RO          794    .text               c_w.l(libspace.o)
    0x000005f4   0x000005f4   0x0000000c   Code   RO          855    .text               c_w.l(sys_exit.o)
    0x00000600   0x00000600   0x00000002   Code   RO          866    .text               c_w.l(use_no_semi.o)
    0x00000602   0x00000602   0x00000000   Code   RO          868    .text               c_w.l(indicate_semi.o)
    0x00000602   0x00000602   0x00000002   PAD
    0x00000604   0x00000604   0x00000060   Code   RO            1    i.PortF_Init        main.o
    0x00000664   0x00000664   0x00000068   Code   RO            2    i.main              main.o
    0x000006cc   0x000006cc   0x00000054   Code   RO          320    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x00000720   0x00000720   0x00000042   Code   RO          321    i.prvAllocateTCBAndStack  tasks.o
    0x00000762   0x00000762   0x00000002   PAD
    0x00000764   0x00000764   0x00000064   Code   RO          322    i.prvCheckTasksWaitingTermination  tasks.o
    0x000007c8   0x000007c8   0x0000002a   Code   RO          142    i.prvCopyDataFromQueue  queue.o
    0x000007f2   0x000007f2   0x00000080   Code   RO          143    i.prvCopyDataToQueue  queue.o
    0x00000872   0x00000872   0x00000012   Code   RO          323    i.prvDeleteTCB      tasks.o
    0x00000884   0x00000884   0x00000038   Code   RO          706    i.prvHeapInit       heap_2.o
    0x000008bc   0x000008bc   0x00000008   Code   RO          324    i.prvIdleTask       tasks.o
    0x000008c4   0x000008c4   0x00000062   Code   RO          325    i.prvInitialiseTCBVariables  tasks.o
    0x00000926   0x00000926   0x00000002   PAD
    0x00000928   0x00000928   0x00000068   Code   RO          326    i.prvInitialiseTaskLists  tasks.o
    0x00000990   0x00000990   0x0000001a   Code   RO          144    i.prvIsQueueEmpty   queue.o
    0x000009aa   0x000009aa   0x0000001e   Code   RO          145    i.prvIsQueueFull    queue.o
    0x000009c8   0x000009c8   0x00000034   Code   RO          328    i.prvResetNextTaskUnblockTime  tasks.o
    0x000009fc   0x000009fc   0x00000016   Code   RO          647    i.prvTaskExitError  port.o
    0x00000a12   0x00000a12   0x0000007e   Code   RO          146    i.prvUnlockQueue    queue.o
    0x00000a90   0x00000a90   0x000000b8   Code   RO          707    i.pvPortMalloc      heap_2.o
    0x00000b48   0x00000b48   0x00000020   Code   RO          331    i.pvTaskIncrementMutexHeldCount  tasks.o
    0x00000b68   0x00000b68   0x00000028   Code   RO          648    i.pxPortInitialiseStack  port.o
    0x00000b90   0x00000b90   0x00000028   Code   RO           97    i.uxListRemove      list.o
    0x00000bb8   0x00000bb8   0x00000004   Code   RO            3    i.vApplicationStackOverflowHook  main.o
    0x00000bbc   0x00000bbc   0x0000001a   Code   RO           98    i.vListInitialise   list.o
    0x00000bd6   0x00000bd6   0x00000006   Code   RO           99    i.vListInitialiseItem  list.o
    0x00000bdc   0x00000bdc   0x00000034   Code   RO          100    i.vListInsert       list.o
    0x00000c10   0x00000c10   0x00000018   Code   RO          101    i.vListInsertEnd    list.o
    0x00000c28   0x00000c28   0x00000024   Code   RO          650    i.vPortEnterCritical  port.o
    0x00000c4c   0x00000c4c   0x00000020   Code   RO          651    i.vPortExitCritical  port.o
    0x00000c6c   0x00000c6c   0x00000040   Code   RO          708    i.vPortFree         heap_2.o
    0x00000cac   0x00000cac   0x00000010   Code   RO          652    i.vPortSetupTimerInterrupt  port.o
    0x00000cbc   0x00000cbc   0x0000004c   Code   RO            4    i.vTask1            main.o
    0x00000d08   0x00000d08   0x0000004c   Code   RO            5    i.vTask2            main.o
    0x00000d54   0x00000d54   0x00000064   Code   RO          340    i.vTaskDelay        tasks.o
    0x00000db8   0x00000db8   0x0000000c   Code   RO          344    i.vTaskMissedYield  tasks.o
    0x00000dc4   0x00000dc4   0x00000064   Code   RO          346    i.vTaskPlaceOnEventList  tasks.o
    0x00000e28   0x00000e28   0x000000b0   Code   RO          348    i.vTaskPriorityInherit  tasks.o
    0x00000ed8   0x00000ed8   0x00000018   Code   RO          352    i.vTaskSetTimeOutState  tasks.o
    0x00000ef0   0x00000ef0   0x00000064   Code   RO          353    i.vTaskStartScheduler  tasks.o
    0x00000f54   0x00000f54   0x00000010   Code   RO          355    i.vTaskSuspendAll   tasks.o
    0x00000f64   0x00000f64   0x00000098   Code   RO          356    i.vTaskSwitchContext  tasks.o
    0x00000ffc   0x00000ffc   0x00000048   Code   RO          653    i.xPortStartScheduler  port.o
    0x00001044   0x00001044   0x00000034   Code   RO          654    i.xPortSysTickHandler  port.o
    0x00001078   0x00001078   0x0000004c   Code   RO          156    i.xQueueCreateMutex  queue.o
    0x000010c4   0x000010c4   0x00000144   Code   RO          158    i.xQueueGenericReceive  queue.o
    0x00001208   0x00001208   0x00000110   Code   RO          160    i.xQueueGenericSend  queue.o
    0x00001318   0x00001318   0x0000005c   Code   RO          357    i.xTaskCheckForTimeOut  tasks.o
    0x00001374   0x00001374   0x00000110   Code   RO          358    i.xTaskGenericCreate  tasks.o
    0x00001484   0x00001484   0x00000120   Code   RO          364    i.xTaskIncrementTick  tasks.o
    0x000015a4   0x000015a4   0x00000084   Code   RO          367    i.xTaskPriorityDisinherit  tasks.o
    0x00001628   0x00001628   0x00000080   Code   RO          368    i.xTaskRemoveFromEventList  tasks.o
    0x000016a8   0x000016a8   0x000000e8   Code   RO          370    i.xTaskResumeAll    tasks.o
    0x00001790   0x00001790   0x0000000a   Code   RO          853    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0000179a   0x0000179a   0x00000002   PAD
    0x0000179c   0x0000179c   0x00000020   Data   RO          921    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x000017bc, Size: 0x00000064, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x000017bc   0x00000010   Data   RW            6    .data               main.o
    0x20000010   0x000017cc   0x00000038   Data   RW          373    .data               tasks.o
    0x20000048   0x00001804   0x00000004   Data   RW          655    .data               port.o
    0x2000004c   0x00001808   0x00000018   Data   RW          712    .data               heap_2.o


    Execution Region ER_ZI (Exec base: 0x20000064, Load base: 0x00001820, Size: 0x00007934, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000064        -       0x000001a4   Zero   RW          372    .bss                tasks.o
    0x20000208        -       0x00007530   Zero   RW          711    .bss                heap_2.o
    0x20007738        -       0x00000060   Zero   RW          795    .bss                c_w.l(libspace.o)
    0x20007798        -       0x00000000   Zero   RW          745    HEAP                startup_rvmdk.o
    0x20007798        -       0x00000200   Zero   RW          744    STACK               startup_rvmdk.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       304         40          0         24      30000       3743   heap_2.o
       148          0          0          0          0       4806   list.o
       356         78          0         16          0      23530   main.o
       452         50          0          4          0       7504   port.o
      1024         10          0          0          0      16163   queue.o
       672        636          0          0        512        540   startup_rvmdk.o
      2386        348          0         56        420      27277   tasks.o

    ----------------------------------------------------------------------
      5348       1162         32        100      30932      83563   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        10          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       696         16          0          0         96       1064   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       676         16          0          0         96        948   c_w.l
        10          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       696         16          0          0         96       1064   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      6044       1178         32        100      31028      79611   Grand Totals
      6044       1178         32        100      31028      79611   ELF Image Totals
      6044       1178         32        100          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 6076 (   5.93kB)
    Total RW  Size (RW Data + ZI Data)             31128 (  30.40kB)
    Total ROM Size (Code + RO Data + RW Data)       6176 (   6.03kB)

==============================================================================

